<h1>Rule:ガチエリア, Stage:ガンガゼ野外音楽堂</h1>
<p>複数件を扱うための検証ページ。作成手順：①ボタン遷移　②カラーパレット（色変更／移動／回転／削除）　③プレイヤー情報の文字列化、タイトル入力欄、DB入力ボタン、DB出力ボタン　④スキーマ完成させて連携</p>
<div id="menu">
<select id="select_weapon">
	<%= @weaponData.each do |w| %>
		<option id="weapon_<%= w.id %>" value="<%= w.id %>" data-range="<%= w.range %>"><%= w.name %></option>
	<% end %>
</select>
<button id="save">保存</button>
<a hidden id="download" download="" href=""></a>
</div>
<div id="edit_menu" style="display:inline;">
    <div id="button_area" style="display:inline;">
    <button id="mv" class="deactive">移動</button>
    <button id="rot" class="deactive">回転</button>
    <button id="rm" class="deactive">削除</button>
    </div>
    <table id="palette"></table>
</div>
<div id="screen" class="canvas-wrapper">
    <canvas id="canvas" width="1000px" height="1000px"></canvas>
    <canvas id="player_canvas" width="1000px" height="1000px"></canvas>
</div>
<%= javascript_pack_tag "webgl2/drawImage2D" %>
<%= javascript_pack_tag "webgl2/drawCircle" %>
<%= javascript_pack_tag "webgl2/drawFan" %>
<script>
	var objCount = 0;
	var editID = "";
	function clearEdit()
	{
		// 他に編集中ボタンがあれば編集へ
		editID = "";
		$('.edit').html("編集");
		$('.edit').addClass("wait");
		$('.edit').removeClass("edit");
	}
	function editStart(e)
	{
		// クリックされたIDを編集中へ
		editID = e.target.id;
		e.target.innerHTML = "編集中";
		e.target.className = "edit";
	}
	function createNewButton(e)
	{
		// 新しいボタン登録 (8個まで)
		++objCount;
		if (objCount >= 8) { objCount = 7; return; }
		var t = "b" + ("000" + objCount).slice(-3);
		$('#menu').append('<button id="' + t + '" class="notCreated">作成</button>');
		$('#' + t).on({ "click" : function(e2) { bClickHandler(e2); } });
	}
	function bCH_notCreated(e)
	{
		clearEdit();
		editStart(e);
		createNewButton(e);
	}
	function bCH_wait(e)
	{
		clearEdit();
		editStart(e);
	}
	function bCH_edit(e)
	{
		clearEdit();
	}
	function bClickHandler(e)
	{
		switch ( e.target.className )
		{
		case "notCreated": bCH_notCreated(e); break;
		case "wait":       bCH_wait(e);       break;
		case "edit":       bCH_edit(e);       break;
		default:                              break;
		}
	}
	$('#menu').append('<button id="b000" class="notCreated">作成</button>');
	$("#b000").on( { "click": function(e){ bClickHandler(e); } } );

	// カラーパレット作成
	var myColor = ["#b00", "#f90", "#ffd31f", "#009a00", "#00adb3", "#0060b3", "#b300b3", "#ff1493", "#9a4d00"];
	$('#palette').append('<tr id="tr1"></tr>');
	for(let i1 = 0; i1 < 9; ++i1)
	{
		$('#tr1').append('<td id="palette' + i1 + '" style="background-color:' + myColor[i1] + '; width:75px;height:30px;"></td>');
	}

        var centerPos = [0, 0];
        var lookForPos = [0, 0];
	var stopLookFor = false;
	Packs["webgl2/drawImage2D"].exec("<%= image_path('area_map/ガンガゼ野外音楽堂.png') %>");
        let player = document.getElementById('player_canvas');
        player.addEventListener('click', function(e)
	{
		stopLookFor = false;
                centerPos[0] = e.offsetX;
                centerPos[1] = e.offsetY;
		Packs["webgl2/drawCircle"].exec(centerPos);
                // jQuery使ってみる
                $('#screen').append(
			"<canvas id='look_for_canvas' width='1000px' height='1000px'></canvas>");
		$('#look_for_canvas').on(
		{ 'mousedown': function(e)
		{
			lookFor_DoEvent(e);
			switch (e.which)
			{
			// press L：角度確定/解除（トグル）
			// press R：キャンセル
			case 1: stopLookFor = !stopLookFor; break;
			case 3: $('#look_for_canvas').remove(); break;
			default: break;
			}
		}, 'mousemove': function(e)
		{
			lookFor_DoEvent(e);
		}});
	});
        function lookFor_DoEvent(e)
	{
		if (stopLookFor) { return; }
        	lookForPos[0] = e.offsetX;
        	lookForPos[1] = e.offsetY;
                let v = $("#select_weapon option:selected").attr("data-range");
		Packs["webgl2/drawFan"].exec(centerPos, lookForPos, v);	
	}
	const resolveImage = (ctx, obj) => 
	{
		return new Promise((resolve, reject) => 
		{
			const image = new Image();
			image.onload = () => 
			{
				ctx.drawImage(image, 0, 0, 1000, 1000);
				resolve(image);
			}
			image.src = obj.toDataURL();
		});
	}
	async function loadCanvas(ctx, obj)
	{
		await resolveImage(ctx, obj);
	}
	$('#save').on({ 'click': function()
	{
		// 2回目に残っていたら透過で上書きされるので消す
		if(document.getElementById("saving_image") != null) $("#saving_image")[0].remove();
		
		var resultObj = document.createElement("canvas");
		resultObj.id = "savingImage";
		resultObj.width = 1000;
		resultObj.height = 1000;
		var resultCtx = resultObj.getContext('2d');
		loadCanvas(resultCtx, $("#canvas")[0])
		.then( result => { loadCanvas(resultCtx, $("#player_canvas")[0])
		.then( result => { if(document.getElementById("look_for_canvas") != null) loadCanvas(resultCtx, $("#look_for_canvas")[0])
		.then( result => {
			$("#download").attr("download", `download.png`);
			$("#download").attr("href", resultObj.toDataURL());
			$("#download")[0].click();
		}); }); });
	}});
</script>

